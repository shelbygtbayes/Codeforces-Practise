#include<iostream>
#include<stdlib.h>
#include<vector>
using namespace std;
int func(string s)
{
    int n = s.size() , st = 0;
    if(n == 1) return 0;
    int total_cnt0 = 0 , total_cnt1 = 0;
    while(st < n)
    {
        if(s[st] == '1') total_cnt1++;
        else total_cnt0++; 
        st++;
    }
    // All zeros 0* , Ones 1*
    int ans =  min(total_cnt0 , total_cnt1);
    int cnt0_so_far = 0 , cnt1_so_far = 0;
    st = 0;
    while(st < n)
    {
        if(s[st] == '1')
        {
            cnt1_so_far++;
            total_cnt1--;
        } 
        else 
        {
            cnt0_so_far++; 
            total_cnt0--;
        }
        //                    Pattern 0*1*
        //        (prefix)1-->0   (left) 0-->1
        ans = min ( ans , cnt1_so_far + total_cnt0); // Net cost to convert All 1's got so far --> 0 + Cost to convert all 0's from current to end -> 1  
        ans = min ( ans , cnt0_so_far + total_cnt1); // Pattern 1*0*
        st++; 
    }
    return ans;
}
int main()
{
    int t;
    cin >> t;
    vector<int> ans;
    while (t--)
    {
        string s;
        cin >> s;
        ans.push_back(func(s));
    }
    for(auto res : ans)
        cout << res << endl;
    return 0;
}
